// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "state.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace jraft {
class LogEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LogEntry>
     _instance;
} _LogEntry_default_instance_;
class PersistStateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PersistState>
     _instance;
} _PersistState_default_instance_;

namespace protobuf_state_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogEntry, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogEntry, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogEntry, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogEntry, command_),
  3,
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistState, currentterm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistState, votedfor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistState, logs_),
  0,
  1,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(LogEntry)},
  { 13, 21, sizeof(PersistState)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PersistState_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "state.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _LogEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LogEntry_default_instance_);_PersistState_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PersistState_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013state.proto\022\005jraft\"X\n\010LogEntry\022\036\n\004type"
      "\030\001 \002(\0162\020.jraft.EntryType\022\014\n\004term\030\002 \002(\003\022\r"
      "\n\005index\030\003 \002(\003\022\017\n\007command\030\004 \002(\t\"T\n\014Persis"
      "tState\022\023\n\013currentTerm\030\001 \002(\003\022\020\n\010votedFor\030"
      "\002 \002(\003\022\035\n\004logs\030\003 \003(\0132\017.jraft.LogEntry*S\n\t"
      "EntryType\022\023\n\017ENTRY_TYPE_NOOP\020\000\022\023\n\017ENTRY_"
      "TYPE_DATA\020\001\022\034\n\030ENTRY_TYPE_CONFIGURATION\020"
      "\003B\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 286);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "state.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_state_2eproto

const ::google::protobuf::EnumDescriptor* EntryType_descriptor() {
  protobuf_state_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_state_2eproto::file_level_enum_descriptors[0];
}
bool EntryType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogEntry::kTypeFieldNumber;
const int LogEntry::kTermFieldNumber;
const int LogEntry::kIndexFieldNumber;
const int LogEntry::kCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogEntry::LogEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_state_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jraft.LogEntry)
}
LogEntry::LogEntry(const LogEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_command()) {
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&term_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:jraft.LogEntry)
}

void LogEntry::SharedCtor() {
  _cached_size_ = 0;
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&term_)) + sizeof(type_));
}

LogEntry::~LogEntry() {
  // @@protoc_insertion_point(destructor:jraft.LogEntry)
  SharedDtor();
}

void LogEntry::SharedDtor() {
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogEntry::descriptor() {
  protobuf_state_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_state_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogEntry& LogEntry::default_instance() {
  protobuf_state_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogEntry* LogEntry::New(::google::protobuf::Arena* arena) const {
  LogEntry* n = new LogEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:jraft.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_command()) {
    GOOGLE_DCHECK(!command_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*command_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 14u) {
    ::memset(&term_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&term_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jraft.LogEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .jraft.EntryType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jraft::EntryType_IsValid(value)) {
            set_type(static_cast< ::jraft::EntryType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 term = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string command = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command().data(), static_cast<int>(this->command().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "jraft.LogEntry.command");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jraft.LogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jraft.LogEntry)
  return false;
#undef DO_
}

void LogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jraft.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .jraft.EntryType type = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required int64 term = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->term(), output);
  }

  // required int64 index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->index(), output);
  }

  // required string command = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jraft.LogEntry.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->command(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jraft.LogEntry)
}

::google::protobuf::uint8* LogEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jraft.LogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .jraft.EntryType type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required int64 term = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->term(), target);
  }

  // required int64 index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->index(), target);
  }

  // required string command = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "jraft.LogEntry.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->command(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jraft.LogEntry)
  return target;
}

size_t LogEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:jraft.LogEntry)
  size_t total_size = 0;

  if (has_command()) {
    // required string command = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }

  if (has_term()) {
    // required int64 term = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->term());
  }

  if (has_index()) {
    // required int64 index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());
  }

  if (has_type()) {
    // required .jraft.EntryType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jraft.LogEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string command = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());

    // required int64 term = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->term());

    // required int64 index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());

    // required .jraft.EntryType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jraft.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const LogEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jraft.LogEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jraft.LogEntry)
    MergeFrom(*source);
  }
}

void LogEntry::MergeFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jraft.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_command();
      command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
    }
    if (cached_has_bits & 0x00000002u) {
      term_ = from.term_;
    }
    if (cached_has_bits & 0x00000004u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LogEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jraft.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogEntry::CopyFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jraft.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void LogEntry::Swap(LogEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogEntry::InternalSwap(LogEntry* other) {
  using std::swap;
  command_.Swap(&other->command_);
  swap(term_, other->term_);
  swap(index_, other->index_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogEntry::GetMetadata() const {
  protobuf_state_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_state_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogEntry

// required .jraft.EntryType type = 1;
bool LogEntry::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LogEntry::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
void LogEntry::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void LogEntry::clear_type() {
  type_ = 0;
  clear_has_type();
}
::jraft::EntryType LogEntry::type() const {
  // @@protoc_insertion_point(field_get:jraft.LogEntry.type)
  return static_cast< ::jraft::EntryType >(type_);
}
void LogEntry::set_type(::jraft::EntryType value) {
  assert(::jraft::EntryType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:jraft.LogEntry.type)
}

// required int64 term = 2;
bool LogEntry::has_term() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LogEntry::set_has_term() {
  _has_bits_[0] |= 0x00000002u;
}
void LogEntry::clear_has_term() {
  _has_bits_[0] &= ~0x00000002u;
}
void LogEntry::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
  clear_has_term();
}
::google::protobuf::int64 LogEntry::term() const {
  // @@protoc_insertion_point(field_get:jraft.LogEntry.term)
  return term_;
}
void LogEntry::set_term(::google::protobuf::int64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:jraft.LogEntry.term)
}

// required int64 index = 3;
bool LogEntry::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LogEntry::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
void LogEntry::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
void LogEntry::clear_index() {
  index_ = GOOGLE_LONGLONG(0);
  clear_has_index();
}
::google::protobuf::int64 LogEntry::index() const {
  // @@protoc_insertion_point(field_get:jraft.LogEntry.index)
  return index_;
}
void LogEntry::set_index(::google::protobuf::int64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:jraft.LogEntry.index)
}

// required string command = 4;
bool LogEntry::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LogEntry::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
void LogEntry::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
void LogEntry::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command();
}
const ::std::string& LogEntry::command() const {
  // @@protoc_insertion_point(field_get:jraft.LogEntry.command)
  return command_.GetNoArena();
}
void LogEntry::set_command(const ::std::string& value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jraft.LogEntry.command)
}
#if LANG_CXX11
void LogEntry::set_command(::std::string&& value) {
  set_has_command();
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jraft.LogEntry.command)
}
#endif
void LogEntry::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jraft.LogEntry.command)
}
void LogEntry::set_command(const char* value, size_t size) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jraft.LogEntry.command)
}
::std::string* LogEntry::mutable_command() {
  set_has_command();
  // @@protoc_insertion_point(field_mutable:jraft.LogEntry.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogEntry::release_command() {
  // @@protoc_insertion_point(field_release:jraft.LogEntry.command)
  clear_has_command();
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogEntry::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    set_has_command();
  } else {
    clear_has_command();
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:jraft.LogEntry.command)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PersistState::kCurrentTermFieldNumber;
const int PersistState::kVotedForFieldNumber;
const int PersistState::kLogsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PersistState::PersistState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_state_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jraft.PersistState)
}
PersistState::PersistState(const PersistState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      logs_(from.logs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&currentterm_, &from.currentterm_,
    static_cast<size_t>(reinterpret_cast<char*>(&votedfor_) -
    reinterpret_cast<char*>(&currentterm_)) + sizeof(votedfor_));
  // @@protoc_insertion_point(copy_constructor:jraft.PersistState)
}

void PersistState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&currentterm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&votedfor_) -
      reinterpret_cast<char*>(&currentterm_)) + sizeof(votedfor_));
}

PersistState::~PersistState() {
  // @@protoc_insertion_point(destructor:jraft.PersistState)
  SharedDtor();
}

void PersistState::SharedDtor() {
}

void PersistState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PersistState::descriptor() {
  protobuf_state_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_state_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PersistState& PersistState::default_instance() {
  protobuf_state_2eproto::InitDefaults();
  return *internal_default_instance();
}

PersistState* PersistState::New(::google::protobuf::Arena* arena) const {
  PersistState* n = new PersistState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PersistState::Clear() {
// @@protoc_insertion_point(message_clear_start:jraft.PersistState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&currentterm_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&votedfor_) -
        reinterpret_cast<char*>(&currentterm_)) + sizeof(votedfor_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PersistState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jraft.PersistState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 currentTerm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_currentterm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &currentterm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 votedFor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_votedfor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &votedfor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .jraft.LogEntry logs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_logs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jraft.PersistState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jraft.PersistState)
  return false;
#undef DO_
}

void PersistState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jraft.PersistState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 currentTerm = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->currentterm(), output);
  }

  // required int64 votedFor = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->votedfor(), output);
  }

  // repeated .jraft.LogEntry logs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->logs(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jraft.PersistState)
}

::google::protobuf::uint8* PersistState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jraft.PersistState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 currentTerm = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->currentterm(), target);
  }

  // required int64 votedFor = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->votedfor(), target);
  }

  // repeated .jraft.LogEntry logs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->logs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jraft.PersistState)
  return target;
}

size_t PersistState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:jraft.PersistState)
  size_t total_size = 0;

  if (has_currentterm()) {
    // required int64 currentTerm = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->currentterm());
  }

  if (has_votedfor()) {
    // required int64 votedFor = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->votedfor());
  }

  return total_size;
}
size_t PersistState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jraft.PersistState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 currentTerm = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->currentterm());

    // required int64 votedFor = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->votedfor());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .jraft.LogEntry logs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->logs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->logs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PersistState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jraft.PersistState)
  GOOGLE_DCHECK_NE(&from, this);
  const PersistState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PersistState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jraft.PersistState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jraft.PersistState)
    MergeFrom(*source);
  }
}

void PersistState::MergeFrom(const PersistState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jraft.PersistState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  logs_.MergeFrom(from.logs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      currentterm_ = from.currentterm_;
    }
    if (cached_has_bits & 0x00000002u) {
      votedfor_ = from.votedfor_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PersistState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jraft.PersistState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PersistState::CopyFrom(const PersistState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jraft.PersistState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PersistState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->logs())) return false;
  return true;
}

void PersistState::Swap(PersistState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PersistState::InternalSwap(PersistState* other) {
  using std::swap;
  logs_.InternalSwap(&other->logs_);
  swap(currentterm_, other->currentterm_);
  swap(votedfor_, other->votedfor_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PersistState::GetMetadata() const {
  protobuf_state_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_state_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PersistState

// required int64 currentTerm = 1;
bool PersistState::has_currentterm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PersistState::set_has_currentterm() {
  _has_bits_[0] |= 0x00000001u;
}
void PersistState::clear_has_currentterm() {
  _has_bits_[0] &= ~0x00000001u;
}
void PersistState::clear_currentterm() {
  currentterm_ = GOOGLE_LONGLONG(0);
  clear_has_currentterm();
}
::google::protobuf::int64 PersistState::currentterm() const {
  // @@protoc_insertion_point(field_get:jraft.PersistState.currentTerm)
  return currentterm_;
}
void PersistState::set_currentterm(::google::protobuf::int64 value) {
  set_has_currentterm();
  currentterm_ = value;
  // @@protoc_insertion_point(field_set:jraft.PersistState.currentTerm)
}

// required int64 votedFor = 2;
bool PersistState::has_votedfor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PersistState::set_has_votedfor() {
  _has_bits_[0] |= 0x00000002u;
}
void PersistState::clear_has_votedfor() {
  _has_bits_[0] &= ~0x00000002u;
}
void PersistState::clear_votedfor() {
  votedfor_ = GOOGLE_LONGLONG(0);
  clear_has_votedfor();
}
::google::protobuf::int64 PersistState::votedfor() const {
  // @@protoc_insertion_point(field_get:jraft.PersistState.votedFor)
  return votedfor_;
}
void PersistState::set_votedfor(::google::protobuf::int64 value) {
  set_has_votedfor();
  votedfor_ = value;
  // @@protoc_insertion_point(field_set:jraft.PersistState.votedFor)
}

// repeated .jraft.LogEntry logs = 3;
int PersistState::logs_size() const {
  return logs_.size();
}
void PersistState::clear_logs() {
  logs_.Clear();
}
const ::jraft::LogEntry& PersistState::logs(int index) const {
  // @@protoc_insertion_point(field_get:jraft.PersistState.logs)
  return logs_.Get(index);
}
::jraft::LogEntry* PersistState::mutable_logs(int index) {
  // @@protoc_insertion_point(field_mutable:jraft.PersistState.logs)
  return logs_.Mutable(index);
}
::jraft::LogEntry* PersistState::add_logs() {
  // @@protoc_insertion_point(field_add:jraft.PersistState.logs)
  return logs_.Add();
}
::google::protobuf::RepeatedPtrField< ::jraft::LogEntry >*
PersistState::mutable_logs() {
  // @@protoc_insertion_point(field_mutable_list:jraft.PersistState.logs)
  return &logs_;
}
const ::google::protobuf::RepeatedPtrField< ::jraft::LogEntry >&
PersistState::logs() const {
  // @@protoc_insertion_point(field_list:jraft.PersistState.logs)
  return logs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace jraft

// @@protoc_insertion_point(global_scope)
