// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft.proto

#ifndef PROTOBUF_raft_2eproto__INCLUDED
#define PROTOBUF_raft_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace jraft {
class AppendEntriesRequest;
class AppendEntriesRequestDefaultTypeInternal;
extern AppendEntriesRequestDefaultTypeInternal _AppendEntriesRequest_default_instance_;
class AppendEntriesResponse;
class AppendEntriesResponseDefaultTypeInternal;
extern AppendEntriesResponseDefaultTypeInternal _AppendEntriesResponse_default_instance_;
class RequestVoteRequest;
class RequestVoteRequestDefaultTypeInternal;
extern RequestVoteRequestDefaultTypeInternal _RequestVoteRequest_default_instance_;
class RequestVoteResponse;
class RequestVoteResponseDefaultTypeInternal;
extern RequestVoteResponseDefaultTypeInternal _RequestVoteResponse_default_instance_;
}  // namespace jraft

namespace jraft {

namespace protobuf_raft_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_raft_2eproto

// ===================================================================

class RequestVoteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:jraft.RequestVoteRequest) */ {
 public:
  RequestVoteRequest();
  virtual ~RequestVoteRequest();

  RequestVoteRequest(const RequestVoteRequest& from);

  inline RequestVoteRequest& operator=(const RequestVoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestVoteRequest(RequestVoteRequest&& from) noexcept
    : RequestVoteRequest() {
    *this = ::std::move(from);
  }

  inline RequestVoteRequest& operator=(RequestVoteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestVoteRequest& default_instance();

  static inline const RequestVoteRequest* internal_default_instance() {
    return reinterpret_cast<const RequestVoteRequest*>(
               &_RequestVoteRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RequestVoteRequest* other);
  friend void swap(RequestVoteRequest& a, RequestVoteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestVoteRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestVoteRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestVoteRequest& from);
  void MergeFrom(const RequestVoteRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestVoteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::int64 term() const;
  void set_term(::google::protobuf::int64 value);

  // required int64 candidateId = 2;
  bool has_candidateid() const;
  void clear_candidateid();
  static const int kCandidateIdFieldNumber = 2;
  ::google::protobuf::int64 candidateid() const;
  void set_candidateid(::google::protobuf::int64 value);

  // required int64 lastLogIndex = 3;
  bool has_lastlogindex() const;
  void clear_lastlogindex();
  static const int kLastLogIndexFieldNumber = 3;
  ::google::protobuf::int64 lastlogindex() const;
  void set_lastlogindex(::google::protobuf::int64 value);

  // required int64 lastLogTerm = 4;
  bool has_lastlogterm() const;
  void clear_lastlogterm();
  static const int kLastLogTermFieldNumber = 4;
  ::google::protobuf::int64 lastlogterm() const;
  void set_lastlogterm(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:jraft.RequestVoteRequest)
 private:
  void set_has_term();
  void clear_has_term();
  void set_has_candidateid();
  void clear_has_candidateid();
  void set_has_lastlogindex();
  void clear_has_lastlogindex();
  void set_has_lastlogterm();
  void clear_has_lastlogterm();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 term_;
  ::google::protobuf::int64 candidateid_;
  ::google::protobuf::int64 lastlogindex_;
  ::google::protobuf::int64 lastlogterm_;
  friend struct protobuf_raft_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestVoteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:jraft.RequestVoteResponse) */ {
 public:
  RequestVoteResponse();
  virtual ~RequestVoteResponse();

  RequestVoteResponse(const RequestVoteResponse& from);

  inline RequestVoteResponse& operator=(const RequestVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestVoteResponse(RequestVoteResponse&& from) noexcept
    : RequestVoteResponse() {
    *this = ::std::move(from);
  }

  inline RequestVoteResponse& operator=(RequestVoteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestVoteResponse& default_instance();

  static inline const RequestVoteResponse* internal_default_instance() {
    return reinterpret_cast<const RequestVoteResponse*>(
               &_RequestVoteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RequestVoteResponse* other);
  friend void swap(RequestVoteResponse& a, RequestVoteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestVoteResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestVoteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestVoteResponse& from);
  void MergeFrom(const RequestVoteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestVoteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::int64 term() const;
  void set_term(::google::protobuf::int64 value);

  // required bool voteGranted = 2;
  bool has_votegranted() const;
  void clear_votegranted();
  static const int kVoteGrantedFieldNumber = 2;
  bool votegranted() const;
  void set_votegranted(bool value);

  // @@protoc_insertion_point(class_scope:jraft.RequestVoteResponse)
 private:
  void set_has_term();
  void clear_has_term();
  void set_has_votegranted();
  void clear_has_votegranted();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 term_;
  bool votegranted_;
  friend struct protobuf_raft_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppendEntriesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:jraft.AppendEntriesRequest) */ {
 public:
  AppendEntriesRequest();
  virtual ~AppendEntriesRequest();

  AppendEntriesRequest(const AppendEntriesRequest& from);

  inline AppendEntriesRequest& operator=(const AppendEntriesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppendEntriesRequest(AppendEntriesRequest&& from) noexcept
    : AppendEntriesRequest() {
    *this = ::std::move(from);
  }

  inline AppendEntriesRequest& operator=(AppendEntriesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppendEntriesRequest& default_instance();

  static inline const AppendEntriesRequest* internal_default_instance() {
    return reinterpret_cast<const AppendEntriesRequest*>(
               &_AppendEntriesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AppendEntriesRequest* other);
  friend void swap(AppendEntriesRequest& a, AppendEntriesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppendEntriesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AppendEntriesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AppendEntriesRequest& from);
  void MergeFrom(const AppendEntriesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AppendEntriesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string entries = 5;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 5;
  const ::std::string& entries(int index) const;
  ::std::string* mutable_entries(int index);
  void set_entries(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_entries(int index, ::std::string&& value);
  #endif
  void set_entries(int index, const char* value);
  void set_entries(int index, const char* value, size_t size);
  ::std::string* add_entries();
  void add_entries(const ::std::string& value);
  #if LANG_CXX11
  void add_entries(::std::string&& value);
  #endif
  void add_entries(const char* value);
  void add_entries(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& entries() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_entries();

  // required int64 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::int64 term() const;
  void set_term(::google::protobuf::int64 value);

  // required int64 leaderId = 2;
  bool has_leaderid() const;
  void clear_leaderid();
  static const int kLeaderIdFieldNumber = 2;
  ::google::protobuf::int64 leaderid() const;
  void set_leaderid(::google::protobuf::int64 value);

  // required int64 prevLogIndex = 3;
  bool has_prevlogindex() const;
  void clear_prevlogindex();
  static const int kPrevLogIndexFieldNumber = 3;
  ::google::protobuf::int64 prevlogindex() const;
  void set_prevlogindex(::google::protobuf::int64 value);

  // required int64 prevLogTerm = 4;
  bool has_prevlogterm() const;
  void clear_prevlogterm();
  static const int kPrevLogTermFieldNumber = 4;
  ::google::protobuf::int64 prevlogterm() const;
  void set_prevlogterm(::google::protobuf::int64 value);

  // required int64 commitedIndex = 6;
  bool has_commitedindex() const;
  void clear_commitedindex();
  static const int kCommitedIndexFieldNumber = 6;
  ::google::protobuf::int64 commitedindex() const;
  void set_commitedindex(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:jraft.AppendEntriesRequest)
 private:
  void set_has_term();
  void clear_has_term();
  void set_has_leaderid();
  void clear_has_leaderid();
  void set_has_prevlogindex();
  void clear_has_prevlogindex();
  void set_has_prevlogterm();
  void clear_has_prevlogterm();
  void set_has_commitedindex();
  void clear_has_commitedindex();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> entries_;
  ::google::protobuf::int64 term_;
  ::google::protobuf::int64 leaderid_;
  ::google::protobuf::int64 prevlogindex_;
  ::google::protobuf::int64 prevlogterm_;
  ::google::protobuf::int64 commitedindex_;
  friend struct protobuf_raft_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppendEntriesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:jraft.AppendEntriesResponse) */ {
 public:
  AppendEntriesResponse();
  virtual ~AppendEntriesResponse();

  AppendEntriesResponse(const AppendEntriesResponse& from);

  inline AppendEntriesResponse& operator=(const AppendEntriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppendEntriesResponse(AppendEntriesResponse&& from) noexcept
    : AppendEntriesResponse() {
    *this = ::std::move(from);
  }

  inline AppendEntriesResponse& operator=(AppendEntriesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppendEntriesResponse& default_instance();

  static inline const AppendEntriesResponse* internal_default_instance() {
    return reinterpret_cast<const AppendEntriesResponse*>(
               &_AppendEntriesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AppendEntriesResponse* other);
  friend void swap(AppendEntriesResponse& a, AppendEntriesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppendEntriesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AppendEntriesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AppendEntriesResponse& from);
  void MergeFrom(const AppendEntriesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AppendEntriesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::int64 term() const;
  void set_term(::google::protobuf::int64 value);

  // required bool success = 2;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:jraft.AppendEntriesResponse)
 private:
  void set_has_term();
  void clear_has_term();
  void set_has_success();
  void clear_has_success();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 term_;
  bool success_;
  friend struct protobuf_raft_2eproto::TableStruct;
};
// ===================================================================

class RaftService_Stub;

class RaftService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline RaftService() {};
 public:
  virtual ~RaftService();

  typedef RaftService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void PreVote(::google::protobuf::RpcController* controller,
                       const ::jraft::RequestVoteRequest* request,
                       ::jraft::RequestVoteResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void RequestVote(::google::protobuf::RpcController* controller,
                       const ::jraft::RequestVoteRequest* request,
                       ::jraft::RequestVoteResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void AppendEntries(::google::protobuf::RpcController* controller,
                       const ::jraft::AppendEntriesRequest* request,
                       ::jraft::AppendEntriesResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RaftService);
};

class RaftService_Stub : public RaftService {
 public:
  RaftService_Stub(::google::protobuf::RpcChannel* channel);
  RaftService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~RaftService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements RaftService ------------------------------------------

  void PreVote(::google::protobuf::RpcController* controller,
                       const ::jraft::RequestVoteRequest* request,
                       ::jraft::RequestVoteResponse* response,
                       ::google::protobuf::Closure* done);
  void RequestVote(::google::protobuf::RpcController* controller,
                       const ::jraft::RequestVoteRequest* request,
                       ::jraft::RequestVoteResponse* response,
                       ::google::protobuf::Closure* done);
  void AppendEntries(::google::protobuf::RpcController* controller,
                       const ::jraft::AppendEntriesRequest* request,
                       ::jraft::AppendEntriesResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RaftService_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RequestVoteRequest

// required int64 term = 1;
inline bool RequestVoteRequest::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestVoteRequest::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestVoteRequest::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestVoteRequest::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::int64 RequestVoteRequest::term() const {
  // @@protoc_insertion_point(field_get:jraft.RequestVoteRequest.term)
  return term_;
}
inline void RequestVoteRequest::set_term(::google::protobuf::int64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:jraft.RequestVoteRequest.term)
}

// required int64 candidateId = 2;
inline bool RequestVoteRequest::has_candidateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestVoteRequest::set_has_candidateid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestVoteRequest::clear_has_candidateid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestVoteRequest::clear_candidateid() {
  candidateid_ = GOOGLE_LONGLONG(0);
  clear_has_candidateid();
}
inline ::google::protobuf::int64 RequestVoteRequest::candidateid() const {
  // @@protoc_insertion_point(field_get:jraft.RequestVoteRequest.candidateId)
  return candidateid_;
}
inline void RequestVoteRequest::set_candidateid(::google::protobuf::int64 value) {
  set_has_candidateid();
  candidateid_ = value;
  // @@protoc_insertion_point(field_set:jraft.RequestVoteRequest.candidateId)
}

// required int64 lastLogIndex = 3;
inline bool RequestVoteRequest::has_lastlogindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestVoteRequest::set_has_lastlogindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestVoteRequest::clear_has_lastlogindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestVoteRequest::clear_lastlogindex() {
  lastlogindex_ = GOOGLE_LONGLONG(0);
  clear_has_lastlogindex();
}
inline ::google::protobuf::int64 RequestVoteRequest::lastlogindex() const {
  // @@protoc_insertion_point(field_get:jraft.RequestVoteRequest.lastLogIndex)
  return lastlogindex_;
}
inline void RequestVoteRequest::set_lastlogindex(::google::protobuf::int64 value) {
  set_has_lastlogindex();
  lastlogindex_ = value;
  // @@protoc_insertion_point(field_set:jraft.RequestVoteRequest.lastLogIndex)
}

// required int64 lastLogTerm = 4;
inline bool RequestVoteRequest::has_lastlogterm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestVoteRequest::set_has_lastlogterm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestVoteRequest::clear_has_lastlogterm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestVoteRequest::clear_lastlogterm() {
  lastlogterm_ = GOOGLE_LONGLONG(0);
  clear_has_lastlogterm();
}
inline ::google::protobuf::int64 RequestVoteRequest::lastlogterm() const {
  // @@protoc_insertion_point(field_get:jraft.RequestVoteRequest.lastLogTerm)
  return lastlogterm_;
}
inline void RequestVoteRequest::set_lastlogterm(::google::protobuf::int64 value) {
  set_has_lastlogterm();
  lastlogterm_ = value;
  // @@protoc_insertion_point(field_set:jraft.RequestVoteRequest.lastLogTerm)
}

// -------------------------------------------------------------------

// RequestVoteResponse

// required int64 term = 1;
inline bool RequestVoteResponse::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestVoteResponse::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestVoteResponse::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestVoteResponse::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::int64 RequestVoteResponse::term() const {
  // @@protoc_insertion_point(field_get:jraft.RequestVoteResponse.term)
  return term_;
}
inline void RequestVoteResponse::set_term(::google::protobuf::int64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:jraft.RequestVoteResponse.term)
}

// required bool voteGranted = 2;
inline bool RequestVoteResponse::has_votegranted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestVoteResponse::set_has_votegranted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestVoteResponse::clear_has_votegranted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestVoteResponse::clear_votegranted() {
  votegranted_ = false;
  clear_has_votegranted();
}
inline bool RequestVoteResponse::votegranted() const {
  // @@protoc_insertion_point(field_get:jraft.RequestVoteResponse.voteGranted)
  return votegranted_;
}
inline void RequestVoteResponse::set_votegranted(bool value) {
  set_has_votegranted();
  votegranted_ = value;
  // @@protoc_insertion_point(field_set:jraft.RequestVoteResponse.voteGranted)
}

// -------------------------------------------------------------------

// AppendEntriesRequest

// required int64 term = 1;
inline bool AppendEntriesRequest::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppendEntriesRequest::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppendEntriesRequest::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppendEntriesRequest::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::int64 AppendEntriesRequest::term() const {
  // @@protoc_insertion_point(field_get:jraft.AppendEntriesRequest.term)
  return term_;
}
inline void AppendEntriesRequest::set_term(::google::protobuf::int64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:jraft.AppendEntriesRequest.term)
}

// required int64 leaderId = 2;
inline bool AppendEntriesRequest::has_leaderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppendEntriesRequest::set_has_leaderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppendEntriesRequest::clear_has_leaderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppendEntriesRequest::clear_leaderid() {
  leaderid_ = GOOGLE_LONGLONG(0);
  clear_has_leaderid();
}
inline ::google::protobuf::int64 AppendEntriesRequest::leaderid() const {
  // @@protoc_insertion_point(field_get:jraft.AppendEntriesRequest.leaderId)
  return leaderid_;
}
inline void AppendEntriesRequest::set_leaderid(::google::protobuf::int64 value) {
  set_has_leaderid();
  leaderid_ = value;
  // @@protoc_insertion_point(field_set:jraft.AppendEntriesRequest.leaderId)
}

// required int64 prevLogIndex = 3;
inline bool AppendEntriesRequest::has_prevlogindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppendEntriesRequest::set_has_prevlogindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppendEntriesRequest::clear_has_prevlogindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppendEntriesRequest::clear_prevlogindex() {
  prevlogindex_ = GOOGLE_LONGLONG(0);
  clear_has_prevlogindex();
}
inline ::google::protobuf::int64 AppendEntriesRequest::prevlogindex() const {
  // @@protoc_insertion_point(field_get:jraft.AppendEntriesRequest.prevLogIndex)
  return prevlogindex_;
}
inline void AppendEntriesRequest::set_prevlogindex(::google::protobuf::int64 value) {
  set_has_prevlogindex();
  prevlogindex_ = value;
  // @@protoc_insertion_point(field_set:jraft.AppendEntriesRequest.prevLogIndex)
}

// required int64 prevLogTerm = 4;
inline bool AppendEntriesRequest::has_prevlogterm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppendEntriesRequest::set_has_prevlogterm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppendEntriesRequest::clear_has_prevlogterm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppendEntriesRequest::clear_prevlogterm() {
  prevlogterm_ = GOOGLE_LONGLONG(0);
  clear_has_prevlogterm();
}
inline ::google::protobuf::int64 AppendEntriesRequest::prevlogterm() const {
  // @@protoc_insertion_point(field_get:jraft.AppendEntriesRequest.prevLogTerm)
  return prevlogterm_;
}
inline void AppendEntriesRequest::set_prevlogterm(::google::protobuf::int64 value) {
  set_has_prevlogterm();
  prevlogterm_ = value;
  // @@protoc_insertion_point(field_set:jraft.AppendEntriesRequest.prevLogTerm)
}

// repeated string entries = 5;
inline int AppendEntriesRequest::entries_size() const {
  return entries_.size();
}
inline void AppendEntriesRequest::clear_entries() {
  entries_.Clear();
}
inline const ::std::string& AppendEntriesRequest::entries(int index) const {
  // @@protoc_insertion_point(field_get:jraft.AppendEntriesRequest.entries)
  return entries_.Get(index);
}
inline ::std::string* AppendEntriesRequest::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:jraft.AppendEntriesRequest.entries)
  return entries_.Mutable(index);
}
inline void AppendEntriesRequest::set_entries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:jraft.AppendEntriesRequest.entries)
  entries_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void AppendEntriesRequest::set_entries(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:jraft.AppendEntriesRequest.entries)
  entries_.Mutable(index)->assign(std::move(value));
}
#endif
inline void AppendEntriesRequest::set_entries(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  entries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:jraft.AppendEntriesRequest.entries)
}
inline void AppendEntriesRequest::set_entries(int index, const char* value, size_t size) {
  entries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:jraft.AppendEntriesRequest.entries)
}
inline ::std::string* AppendEntriesRequest::add_entries() {
  // @@protoc_insertion_point(field_add_mutable:jraft.AppendEntriesRequest.entries)
  return entries_.Add();
}
inline void AppendEntriesRequest::add_entries(const ::std::string& value) {
  entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:jraft.AppendEntriesRequest.entries)
}
#if LANG_CXX11
inline void AppendEntriesRequest::add_entries(::std::string&& value) {
  entries_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:jraft.AppendEntriesRequest.entries)
}
#endif
inline void AppendEntriesRequest::add_entries(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:jraft.AppendEntriesRequest.entries)
}
inline void AppendEntriesRequest::add_entries(const char* value, size_t size) {
  entries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:jraft.AppendEntriesRequest.entries)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AppendEntriesRequest::entries() const {
  // @@protoc_insertion_point(field_list:jraft.AppendEntriesRequest.entries)
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AppendEntriesRequest::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:jraft.AppendEntriesRequest.entries)
  return &entries_;
}

// required int64 commitedIndex = 6;
inline bool AppendEntriesRequest::has_commitedindex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppendEntriesRequest::set_has_commitedindex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppendEntriesRequest::clear_has_commitedindex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppendEntriesRequest::clear_commitedindex() {
  commitedindex_ = GOOGLE_LONGLONG(0);
  clear_has_commitedindex();
}
inline ::google::protobuf::int64 AppendEntriesRequest::commitedindex() const {
  // @@protoc_insertion_point(field_get:jraft.AppendEntriesRequest.commitedIndex)
  return commitedindex_;
}
inline void AppendEntriesRequest::set_commitedindex(::google::protobuf::int64 value) {
  set_has_commitedindex();
  commitedindex_ = value;
  // @@protoc_insertion_point(field_set:jraft.AppendEntriesRequest.commitedIndex)
}

// -------------------------------------------------------------------

// AppendEntriesResponse

// required int64 term = 1;
inline bool AppendEntriesResponse::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppendEntriesResponse::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppendEntriesResponse::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppendEntriesResponse::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::int64 AppendEntriesResponse::term() const {
  // @@protoc_insertion_point(field_get:jraft.AppendEntriesResponse.term)
  return term_;
}
inline void AppendEntriesResponse::set_term(::google::protobuf::int64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:jraft.AppendEntriesResponse.term)
}

// required bool success = 2;
inline bool AppendEntriesResponse::has_success() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppendEntriesResponse::set_has_success() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppendEntriesResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppendEntriesResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool AppendEntriesResponse::success() const {
  // @@protoc_insertion_point(field_get:jraft.AppendEntriesResponse.success)
  return success_;
}
inline void AppendEntriesResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:jraft.AppendEntriesResponse.success)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace jraft

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_raft_2eproto__INCLUDED
